#!/usr/bin/env node

(function() {

    'use strict';

    // Core
    var events = require('events');
    var fs = require('fs');

    // Packages
    var async = require('async');
    var chalk = require('chalk');
    var program = require('commander');

    // Modules
    var config = require('../lib/config');
    var fileList = require('../lib/filelist');
    var gitHub = require('../lib/github');
    var imgur = require('../lib/imgur');

    // Data
    var pkg = JSON.parse(fs.readFileSync(__dirname + '/../package.json', 'utf8'));

    // Functions
    function errorHandler (err) {
        console.log('[' + chalk.red('!') + ']', err.message);
        console.log(chalk.cyan('Exiting!'));
        process.exit(1);
    }

    // Setup
    program
        .version(pkg.version)
        .option('-s, --setup', 'Start in setup mode to enter a new config')
        .usage('[user|org]/<repo> [directory] [options]');

    // Display detailed help
    // TODO: Write all the help
    program.on('--help', function () {
        console.log('Example usage: img2iss rogerhutchings/testrepo ./testdir');
    });

    // Initialise config
    config.initialise(function (err) {
        if (err) return errorHandler(err);
        createIssues();
    });

    // Create a list of files and create the issues
    function createIssues () {

        async.each(fileList(config.get('targetDir')), function (file, callback) {

            async.series([

                // Upload to Imgur
                function (callback) {
                    imgur(file, config.get('imgur'), function (err, file) {
                        if (err) return callback(err);
                        callback();
                    });
                },

                // Upload to Github
                function (callback) {
                    gitHub(file, config.get('github'), function (err, result) {
                        if (err) return callback(err);
                        callback();
                    });
                }

            ], function (err) {
                if (err) return callback(err);
            });

        }, function (err) {
            if (err) return errorHandler(err);
        });

    }

}());
